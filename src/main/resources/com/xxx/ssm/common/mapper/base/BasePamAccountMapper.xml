<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxx.ssm.common.dao.base.BasePamAccountDAO">
  <resultMap id="BaseResultMap" type="com.xxx.ssm.common.entities.PamAccount">
    <id column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="login_password" jdbcType="VARCHAR" property="loginPassword" />
    <result column="disabled" jdbcType="CHAR" property="disabled" />
    <result column="createtime" jdbcType="INTEGER" property="createtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    account_id, account_type, login_name, login_password, disabled, createtime
  </sql>
  <select id="selectByExample" parameterType="com.xxx.ssm.common.entities.example.pamAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pam_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <!--加入分页的实现-->
    <if test="start !=0 or limit!=0">
      limit #{start},#{limit}
    </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pam_account
    where account_id = #{accountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pam_account
    where account_id = #{accountId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xxx.ssm.common.entities.example.pamAccountExample">
    delete from pam_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true"   keyProperty="accountId" parameterType="com.xxx.ssm.common.entities.PamAccount">
    insert into pam_account (account_id, account_type, login_name,
      login_password, disabled, createtime
      )
    values (#{accountId,jdbcType=INTEGER}, #{accountType,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR},
      #{loginPassword,jdbcType=VARCHAR}, #{disabled,jdbcType=CHAR}, #{createtime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xxx.ssm.common.entities.PamAccount">
    insert into pam_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="loginPassword != null">
        login_password,
      </if>
      <if test="disabled != null">
        disabled,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null">
        #{disabled,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xxx.ssm.common.entities.example.pamAccountExample" resultType="java.lang.Integer">
    select count(*) from pam_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pam_account
    <set>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPassword != null">
        login_password = #{record.loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.disabled != null">
        disabled = #{record.disabled,jdbcType=CHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pam_account
    set account_id = #{record.accountId,jdbcType=INTEGER},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      login_password = #{record.loginPassword,jdbcType=VARCHAR},
      disabled = #{record.disabled,jdbcType=CHAR},
      createtime = #{record.createtime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxx.ssm.common.entities.PamAccount">
    update pam_account
    <set>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null">
        disabled = #{disabled,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=INTEGER},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxx.ssm.common.entities.PamAccount">
    update pam_account
    set account_type = #{accountType,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      disabled = #{disabled,jdbcType=CHAR},
      createtime = #{createtime,jdbcType=INTEGER}
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
</mapper>